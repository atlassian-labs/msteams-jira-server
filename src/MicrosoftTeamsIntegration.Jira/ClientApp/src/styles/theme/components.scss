@use '../app-colors';

/* default coloring schemes */
$defaultThemeColoring: (color: app-colors.$app-brand, backgroundColor: app-colors.$white);
$darkThemeColoring: (color: app-colors.$app-brand-dark, backgroundColor: app-colors.$app-gray-14-dark);
$contrastThemeColoring: (color: app-colors.$white, backgroundColor: app-colors.$black);

@mixin theme-element($selector, 
        $color: null, $backgroundColor: null, 
        $hoverColor: null, $hoverBackgroundColor: null, 
        $border: #{'none'}, $borderHover: null
    ) {

    #{$selector} {
        color: $color;
        background-color: $backgroundColor;
        border: $border;

        &:hover {
            color: $hoverColor;
            background: $hoverBackgroundColor;
            border: $borderHover;
        }
    }
}

body {
    &.default {
        @include theme-element('a', app-colors.$app-brand);
        @include theme-element('ul.dropdown__options li', $hoverColor: app-colors.$white, $hoverBackgroundColor: app-colors.$app-brand);

        & ::-webkit-scrollbar-thumb {
            background: app-colors.$scrollbar-light;
        }
    }

    &.dark {
        @include theme-element('a', app-colors.$app-brand-dark);
        @include theme-element('ul.dropdown__options li', $hoverBackgroundColor: app-colors.$app-brand-dark);

        & ::-webkit-scrollbar-thumb {
            background: app-colors.$scrollbar-dark;
        }
    }

    &.contrast {
        @include theme-element('a', app-colors.$yellow);
        @include theme-element('ul.dropdown__options li, .face__icon', app-colors.$white, app-colors.$black, app-colors.$black, app-colors.$yellow );

        ::-webkit-scrollbar-thumb {
            background: app-colors.$white;
        }
    }
}